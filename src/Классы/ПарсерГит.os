#Использовать 1commands
#Использовать strings

Функция ПолучитьМассивКоммитов(_from, _to) Экспорт

	Если _to = Неопределено Тогда
		_to = "HEAD";
	КонецЕсли;

	ИсторияКоммитов = ПолучитьИсториюКоммитов(_from, _to);
	МассивКоммитов	= СтроковыеФункции.РазложитьСтрокуВМассивПодстрок(ИсторияКоммитов, "{{MSG_SEPARATOR}}", Истина);
	
	Возврат МассивКоммитов;

КонецФункции

Функция ПолучитьДатуИзменений(_to) Экспорт

	Если _to = Неопределено Тогда
		_to = "HEAD";
	КонецЕсли;

	КомандаГит = ПодготовитьКомандуГит();
	ПарамтерыКоманды = Новый Массив;

	ПарамтерыКоманды.Добавить("log");
	ПарамтерыКоманды.Добавить("-1");
	ПарамтерыКоманды.Добавить("-s");
	ПарамтерыКоманды.Добавить("--format=%ci");
	ПарамтерыКоманды.Добавить(_to);

	КомандаГит.ДобавитьПараметры(ПарамтерыКоманды);

	КодВозврата = КомандаГит.Исполнить();

	Возврат СокрЛП(КомандаГит.ПолучитьВывод());
КонецФункции

Функция ПолучитьИсториюКоммитов(_from, _to)

	КомандаГит = ПодготовитьКомандуГит();
	ПарамтерыКоманды = Новый Массив;

	ПарамтерыКоманды.Добавить("log");
	ПарамтерыКоманды.Добавить(ПолучитьПределы(_from, _to));
	ПарамтерыКоманды.Добавить("--pretty=format:""%s{{MSG_SEPARATOR}}%b""");
	КомандаГит.ДобавитьПараметры(ПарамтерыКоманды);

	КодВозврата = КомандаГит.Исполнить();

	Возврат СокрЛП(КомандаГит.ПолучитьВывод());
КонецФункции

Функция ПодготовитьКомандуГит()
	Команда = Новый Команда;

    Команда.УстановитьКоманду("git");
    Команда.УстановитьРабочийКаталог(ТекущийКаталог());
	Команда.УстановитьКодировкуВывода(КодировкаТекста.UTF8);
	
	Возврат Команда;
КонецФункции

Функция ПолучитьПределы(_from, _to)
	Возврат СтрШаблон("%1...%2", _from, _to);
КонецФункции