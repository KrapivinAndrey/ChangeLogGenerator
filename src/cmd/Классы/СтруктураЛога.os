#Использовать strings
#Использовать asserts
#Использовать yaml

Перем Лог;

Перем НастройкиБлоков;

//Возвращает типовую струкутру согласно шаблону Keepchangelog
Функция НастройкиСоответствияБлоковПоУмолчанию()

	Результат = Новый Соответствие;

	//Секция Добавлено
	Результат.Вставить("Добавлено", 	"Добавлено");
	Результат.Вставить("Добавил",	 	"Добавлено");
	Результат.Вставить("Add", 			"Добавлено");

	//Секция Изменено
	Результат.Вставить("Изменено", 		"Изменено");
	Результат.Вставить("Изменил", 		"Изменено");
	Результат.Вставить("Change", 		"Изменено");

	//Секция Устарело
	Результат.Вставить("Устарело", 		"Устарело");
	Результат.Вставить("Delete", 		"Устарело");

	//Секция Устарело
	Результат.Вставить("Устарело", 		"Устарело");
	Результат.Вставить("Deprecated", 	"Устарело");

	//Секция Удалено
	Результат.Вставить("Удалено", 		"Удалено");
	Результат.Вставить("Удалил", 		"Удалено");
	Результат.Вставить("Remove",	 	"Удалено");

	//Секция Исправлено
	Результат.Вставить("Исправлено", 	"Исправлено");
	Результат.Вставить("Баг",		 	"Исправлено");
	Результат.Вставить("Фикс", 			"Исправлено");
	Результат.Вставить("Bug",		 	"Исправлено");
	Результат.Вставить("Fix",		 	"Исправлено");

	//Секция Безопасность
	Результат.Вставить("Безопасность", 	"Безопасность");
	Результат.Вставить("Security",	 	"Безопасность");

	Возврат Результат;

КонецФункции

Функция ЗаполнитьНастройкиИзДанных(ВхСоответствие)

	Результат = новый Соответствие();
	Для Каждого Группа из ВхСоответствие Цикл

		Для Каждого Эл Из Группа.Значение Цикл

			Результат.Вставить(Эл, Группа.Ключ);

		КонецЦикла;

	КонецЦикла;

	Возврат Результат;

КонецФункции

Процедура ОбработатьЭлементНастроек(Дерево, Настройка)

	НужнаяГруппа = Дерево.Строки.Найти(Настройка.Значение, "Блок");
	Если НужнаяГруппа = Неопределено Тогда 

		НужнаяГруппа = Дерево.Строки.Добавить();
		НужнаяГруппа.Блок = Настройка.Значение;

	КонецЕсли;

	НоваяЗапись = НужнаяГруппа.Строки.Добавить();
	НоваяЗапись.СловоОпределение = Настройка.Ключ;

КонецПроцедуры

Функция ИнициализацияДерева()

	Ожидаем.Что(НастройкиБлоков, "Еще не указаны настройки формирования лога").ИмеетТип("Соответствие");

	Результат = Новый ДеревоЗначений;
	Результат.Колонки.Добавить("Блок",				Новый ОписаниеТипов("Строка"));
	Результат.Колонки.Добавить("СловоОпределение",	Новый ОписаниеТипов("Строка"));

	Для Каждого ЭлНастройки из НастройкиБлоков Цикл
	
		ОбработатьЭлементНастроек(Результат, ЭлНастройки);

	КонецЦикла;

	Возврат Результат;

КонецФункции

//Интерфейс класса

Процедура ИспользоватьНастройкиПоУмолчанию() Экспорт

	НастройкиБлоков = НастройкиСоответствияБлоковПоУмолчанию();

КонецПроцедуры

Процедура ИспользоватьНастройкиИзФайла(ПутьКФайлуНастроек) Экспорт

	Чтение = Новый ЧтениеТекста(ПутьКФайлуНастроек, КодировкаТекста.UTF8);
	текстВФайле = Чтение.Прочитать();
	Чтение.Закрыть();

	Разбор = Новый ПарсерYAML;
	Результат = Разбор.ПрочитатьYAML(текстВФайле);

	Если Результат["massage_groups"] = Неопределено Тогда

		НастройкиБлоков = НастройкиСоответствияБлоковПоУмолчанию();

	Иначе

		НастройкиБлоков = ЗаполнитьНастройкиИзДанных(Результат["massage_groups"]);

	КонецЕсли;

КонецПроцедуры

Процедура ИспользоватьНастройки(ПутьКФайлуНастроек = Неопределено) Экспорт

	Если ПутьКФайлуНастроек = Неопределено Тогда
		
		ИспользоватьНастройкиПоУмолчанию();

	Иначе

		ИспользоватьНастройкиИзФайла(ПутьКФайлуНастроек);

	КонецЕсли

КонецПроцедуры

Функция ПолучитьСтруктуруЛога() Экспорт

	Ожидаем.Что(НастройкиБлоков, "Должны быть указаны настройки структуры").ИмеетТип("Соответствие");

	Дерево = ИнициализацияДерева();

	Возврат Дерево;

КонецФункции